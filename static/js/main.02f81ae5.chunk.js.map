{"version":3,"sources":["components/Navbar.tsx","App.tsx","components/Home.tsx","components/Loader/Loader.tsx","components/PeopleContent.tsx","Pages/PeoplePage.tsx","helpers/getNormalizedPeopleList.ts","api/fetchPeople.ts","components/NotFound.tsx","Root.tsx","index.tsx"],"names":["className","isActive","cn","Navbar","role","to","App","Home","Loader","PeopleContent","people","isError","isLoading","personId","useParams","length","map","person","name","sex","born","died","fatherName","motherName","slug","mother","father","PeoplePage","useState","peopleList","setPeopleList","setIsError","setIsLoading","normalizedPeopleList","parentsList","reduce","acc","copyPerson","normalizedMotherName","normalizedFatherName","getNormalizedPeopleList","useLayoutEffect","fetch","then","res","ok","Error","json","data","catch","finally","NotFound","Root","path","element","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.02f81ae5.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nconst className = ({ isActive }: { isActive: boolean }) => cn('navbar-item',\n  { 'has-background-grey-lighter': isActive });\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={className}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={className}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport './App.scss';\n\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <div className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </div>\n  </div>\n);\n","export const Home = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport cn from 'classnames';\n\nimport { Loader } from './Loader';\nimport { Person } from '../types';\n\ntype Props = {\n  people: Person[],\n  isError: boolean,\n  isLoading: boolean,\n};\n\nexport const PeopleContent: React.FC<Props> = ({\n  people,\n  isError,\n  isLoading,\n}) => {\n  const { personId } = useParams();\n\n  if (isError) {\n    return (\n      <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n        Something went wrong\n      </p>\n    );\n  }\n\n  if (isLoading) {\n    return (\n      <Loader />\n    );\n  }\n\n  if (!people.length) {\n    return (\n      <p data-cy=\"noPeopleMessage\">\n        There are no people on the server\n      </p>\n    );\n  }\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const {\n            name,\n            sex,\n            born,\n            died,\n            fatherName,\n            motherName,\n            slug,\n            mother,\n            father,\n\n          } = person;\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={slug}\n              className={cn({\n                'has-background-warning': personId === slug,\n              })}\n            >\n              <td>\n                <Link\n                  to={`/people/${slug}`}\n                  className={cn({\n                    'has-text-danger': sex === 'f',\n                  })}\n                >\n                  {name}\n                </Link>\n              </td>\n\n              <td>\n                {sex}\n              </td>\n              <td>\n                {born}\n              </td>\n              <td>\n                {died}\n              </td>\n              <td>\n                {mother?.slug ? (\n                  <Link\n                    className=\"has-text-danger\"\n                    to={`/people/${mother?.slug}`}\n                  >\n                    {motherName}\n                  </Link>\n                ) : (\n                  motherName\n                )}\n              </td>\n              <td>\n                {father ? (\n                  <Link\n                    to={`/people/${father?.slug}`}\n                  >\n                    {fatherName}\n                  </Link>\n                ) : (\n                  fatherName\n                )}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useLayoutEffect, useState } from 'react';\n\nimport { PeopleContent } from '../components/PeopleContent';\nimport { Person } from '../types';\nimport { fetchPeople } from '../api/fetchPeople';\nimport { getNormalizedPeopleList } from '../helpers/getNormalizedPeopleList';\n\nexport const PeoplePage = () => {\n  const [peopleList, setPeopleList] = useState<Person[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const normalizedPeopleList = getNormalizedPeopleList(peopleList);\n\n  useLayoutEffect(() => {\n    setIsLoading(true);\n\n    fetchPeople()\n      .then(data => setPeopleList(data))\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          <PeopleContent\n            people={normalizedPeopleList}\n            isError={isError}\n            isLoading={isLoading}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Person } from '../types';\n\nexport const getNormalizedPeopleList = (people: Person[]) => {\n  const parentsList = people.reduce((acc, person) => {\n    const key = person.name;\n    /* eslint no-param-reassign: \"error\" */\n\n    acc[key] = person;\n\n    return acc;\n  }, {} as {\n    [key: string]: Person;\n  });\n\n  const list = people.map(person => {\n    const copyPerson = { ...person };\n    const normalizedMotherName = person.motherName || '-';\n    const normalizedFatherName = person.fatherName || '-';\n\n    copyPerson.motherName = normalizedMotherName;\n    copyPerson.fatherName = normalizedFatherName;\n\n    copyPerson.mother = parentsList[normalizedMotherName];\n    copyPerson.father = parentsList[normalizedFatherName];\n\n    return copyPerson;\n  });\n\n  return list;\n};\n","export const fetchPeople = () => {\n  return (\n    fetch('https://mate-academy.github.io/react_people-table/api/people.json')\n      .then(res => {\n        if (!res.ok) {\n          throw new Error('error');\n        }\n\n        return res.json();\n      })\n  );\n};\n","export const NotFound = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import {\n  HashRouter, Route, Routes, Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { Home } from './components/Home';\nimport { PeoplePage } from './Pages/PeoplePage';\nimport { NotFound } from './components/NotFound';\n\nexport const Root = () => {\n  return (\n    <HashRouter>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<Home />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" />} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":personId?\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFound />} />\n        </Route>\n      </Routes>\n    </HashRouter>\n  );\n};\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}